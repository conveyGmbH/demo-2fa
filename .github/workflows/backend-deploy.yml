# .github/workflows/backend-deploy.yml
# Based on working lsapisamplesbackend workflow - WITHOUT environment section
name: Build and deploy Node.js app to Azure Web App - LS2FABackend

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/backend-deploy.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          
      - name: npm install, build, and test
        run: |
          cd backend
          npm install
          npm run build --if-present
          npm run test --if-present
          
      - name: Create web.config for Azure App Service
        run: |
          cd backend
          echo "üîß Creating web.config for Azure App Service..."
          cat > web.config << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <handlers>
                <add name="iisnode" path="src/server.js" verb="*" modules="iisnode"/>
              </handlers>
              <rewrite>
                <rules>
                  <rule name="DynamicContent">
                    <conditions>
                      <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
                    </conditions>
                    <action type="Rewrite" url="src/server.js"/>
                  </rule>
                </rules>
              </rewrite>
              <httpErrors existingResponse="PassThrough" />
              <iisnode 
                node_env="production"
                nodeProcessCountPerApplication="1"
                maxConcurrentRequestsPerProcess="1024"
                watchedFiles="*.js"
                loggingEnabled="true"
                devErrorsEnabled="false"
              />
            </system.webServer>
          </configuration>
          EOF
          echo "‚úÖ web.config created"
          
      - name: Zip artifact for deployment
        run: |
          cd backend
          zip -r ../release.zip ./*
          
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
          
      - name: Unzip artifact for deployment
        run: |
          unzip release.zip
          echo "üìÅ Deployment files:"
          ls -la
          echo "üîç Critical files check:"
          ls -la src/server.js && echo "‚úÖ server.js found" || echo "‚ùå server.js MISSING"
          ls -la package.json && echo "‚úÖ package.json found" || echo "‚ùå package.json MISSING"
          ls -la web.config && echo "‚úÖ web.config found" || echo "‚ùå web.config MISSING"
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_2BF766D5A20142FD98FE5C9A0AC83352 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_3319CE4BA45F421B8738BADAE4CEA94A }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_7F935D1C76E748C79F07EC76D990ECAF }}
          
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'LS2FABackend'
          slot-name: 'Production'
          package: .
          
      - name: Test deployment
        run: |
          echo "‚è≥ Waiting for deployment to stabilize (60s)..."
          sleep 60
          
          echo "üß™ Testing backend endpoints..."
          
          # Test 1: Root endpoint
          echo "üìç Testing root endpoint..."
          curl -f -s https://ls2fabackend-fthub6cvegdeagbv.westeurope-01.azurewebsites.net/ && echo "‚úÖ Root OK" || echo "‚ùå Root failed"
          
          # Test 2: Health endpoint
          echo "üìç Testing health endpoint..."
          curl -f -s https://ls2fabackend-fthub6cvegdeagbv.westeurope-01.azurewebsites.net/api/v1/health && echo "‚úÖ Health OK" || echo "‚ùå Health failed"
          
          # Test 3: API base
          echo "üìç Testing API base..."
          curl -f -s https://ls2fabackend-fthub6cvegdeagbv.westeurope-01.azurewebsites.net/api/v1 && echo "‚úÖ API OK" || echo "‚ùå API failed"
          
          echo "‚úÖ Deployment testing completed"
